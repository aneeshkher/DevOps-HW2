var mystery = require('./mystery')
var mock = require('mock-fs');
mystery.inc(29,'');
mystery.inc(29,undefined);
mystery.inc(29,"NegativeEqualEqual");
mystery.inc(31,undefined);
mystery.inc(31,"NegativeEqualEqual");
mock({"some/path/dirExists":{"fileExists1":"","fileExists2":"ABCDEFG"},"path/emptyDir":{},"some/path/fileExists":{"emptyFile":"","nonEmptyFile":"DevOps"}});
	mystery.fileTest('some/path/dirExists/fakeDir','some/path/fileExists/nonEmptyFile');
mock.restore();
mock({"some/path/dirExists":{"fileExists1":"","fileExists2":"ABCDEFG"},"path/emptyDir":{},"some/path/fileExists":{"emptyFile":"","nonEmptyFile":"DevOps"}});
	mystery.fileTest('some/path/dirExists/fakeDir','some.path/fileExists/fakeFile');
mock.restore();
mock({"some/path/dirExists":{"fileExists1":"","fileExists2":"ABCDEFG"},"path/emptyDir":{},"some/path/fileExists":{"emptyFile":"","nonEmptyFile":"DevOps"}});
	mystery.fileTest('some/path/dirExists/fakeDir','some/path/fileExists/emptyFile');
mock.restore();
mock({"some/path/dirExists":{"fileExists1":"","fileExists2":"ABCDEFG"},"path/emptyDir":{},"some/path/fileExists":{"emptyFile":"","nonEmptyFile":"DevOps"}});
	mystery.fileTest('some/path/dirExists','some/path/fileExists/emptyFile');
mock.restore();
mock({"some/path/dirExists":{"fileExists1":"","fileExists2":"ABCDEFG"},"path/emptyDir":{},"some/path/fileExists":{"emptyFile":"","nonEmptyFile":"DevOps"}});
	mystery.fileTest('path/emptyDir','some/path/fileExists/emptyFile');
mock.restore();
mock({"some/path/dirExists":{"fileExists1":"","fileExists2":"ABCDEFG"},"path/emptyDir":{},"some/path/fileExists":{"emptyFile":"","nonEmptyFile":"DevOps"}});
	mystery.fileTest('path/emptyDir','some/path/fileExists/nonEmptyFile');
mock.restore();
mock({"some/path/dirExists":{"fileExists1":"","fileExists2":"ABCDEFG"},"path/emptyDir":{},"some/path/fileExists":{"emptyFile":"","nonEmptyFile":"DevOps"}});
	mystery.fileTest('some/path/dirExists','some.path/fileExists/fakeFile');
mock.restore();
mock({"some/path/dirExists":{"fileExists1":"","fileExists2":"ABCDEFG"},"path/emptyDir":{},"some/path/fileExists":{"emptyFile":"","nonEmptyFile":"DevOps"}});
	mystery.fileTest('some/path/dirExists','some/path/fileExists/nonEmptyFile');
mock.restore();
mock({"some/path/dirExists":{"fileExists1":"","fileExists2":"ABCDEFG"},"path/emptyDir":{},"some/path/fileExists":{"emptyFile":"","nonEmptyFile":"DevOps"}});
	mystery.fileTest('path/emptyDir','some.path/fileExists/fakeFile');
mock.restore();
mystery.normalize('');
mystery.format('','',false);
mystery.format('','(###) ###-#### x###',false);
mystery.format('','(###) ###-#### x###',{"shouldNormalize": true});
mystery.format('','(###) ###-#### x###',true);
mystery.format("852-420-4286",'(###) ###-#### x###',{"shouldNormalize": true});
mystery.format("852-420-4286",'(###) ###-#### x###',true);
mystery.format("852-420-4286",'(###) ###-#### x###',false);
mystery.blackListNumber('919-040-6571');
mystery.blackListNumber('021-040-6571');
