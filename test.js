var subject = require('./subject')
var mock = require('mock-fs');
subject.inc(1,'');
subject.inc(1,undefined);
subject.inc(-1,undefined);
subject.inc(-1,"NegativeEqualEqual");
subject.inc(1,"NegativeEqualEqual");
subject.weird('','',41,'');
subject.weird('','',41,"strict");
subject.weird('','',41,"NegativeCallExpression");
subject.weird('','',43,"NegativeCallExpression");
subject.weird('','',43,"NegativeEqualEqual");
subject.weird('','',43,"strict");
subject.weird(8,'',43,"NegativeEqualEqual");
subject.weird(8,'',43,"werw");
subject.weird(8,'',43,"NegativeNotEqual");
subject.weird(8,'',41,"werw");
subject.weird(8,-1,43,"NegativeNotEqual");
subject.weird(8,-1,41,"NegativeNotEqual");
subject.weird(8,-1,41,"NegativeCallExpression");
subject.weird(8,-1,41,"strict");
subject.weird(8,-1,41,"NegativeEqualEqual");
subject.weird(8,-1,43,"NegativeEqualEqual");
subject.weird(8,-1,43,"strict");
subject.weird(8,1,43,"strict");
subject.weird(8,1,43,"NegativeCallExpression");
subject.weird(8,1,43,"NegativeNotEqual");
subject.weird(8,-1,43,"werw");
subject.weird(6,-1,43,"werw");
subject.weird(6,-1,41,"werw");
subject.weird(6,-1,41,"NegativeNotEqual");
subject.weird(6,-1,41,"strict");
subject.weird(6,-1,43,"strict");
subject.weird(6,-1,43,"NegativeCallExpression");
subject.weird(6,-1,43,"NegativeEqualEqual");
subject.weird(6,-1,43,"NegativeNotEqual");
subject.weird(6,-1,41,"NegativeCallExpression");
subject.weird(6,1,41,"NegativeCallExpression");
subject.weird(6,1,41,"NegativeEqualEqual");
subject.weird(8,1,41,"NegativeEqualEqual");
subject.weird(8,-1,41,"werw");
subject.weird(8,1,41,"werw");
subject.weird(8,1,43,"werw");
subject.weird(6,1,43,"NegativeCallExpression");
subject.weird(6,1,43,"strict");
subject.weird(6,1,43,"NegativeNotEqual");
subject.weird(6,1,43,"werw");
subject.weird(8,1,41,"strict");
subject.weird(8,1,41,"NegativeNotEqual");
mock({"some/path/dirExists":{"fileExists1":"","fileExists2":"ABCDEFG"},"path/emptyDir":{},"some/path/fileExists":{"emptyFile":"","nonEmptyFile":"DevOps"}});
	subject.fileTest('some/path/dirExists','some/path/fileExists/nonEmptyFile');
mock.restore();
mock({"some/path/dirExists":{"fileExists1":"","fileExists2":"ABCDEFG"},"path/emptyDir":{},"some/path/fileExists":{"emptyFile":"","nonEmptyFile":"DevOps"}});
	subject.fileTest('path/emptyDir','some/path/fileExists/nonEmptyFile');
mock.restore();
mock({"some/path/dirExists":{"fileExists1":"","fileExists2":"ABCDEFG"},"path/emptyDir":{},"some/path/fileExists":{"emptyFile":"","nonEmptyFile":"DevOps"}});
	subject.fileTest('path/emptyDir','some/path/fileExists/emptyFile');
mock.restore();
mock({"some/path/dirExists":{"fileExists1":"","fileExists2":"ABCDEFG"},"path/emptyDir":{},"some/path/fileExists":{"emptyFile":"","nonEmptyFile":"DevOps"}});
	subject.fileTest('some/path/dirExists/fakeDir','some/path/fileExists/emptyFile');
mock.restore();
mock({"some/path/dirExists":{"fileExists1":"","fileExists2":"ABCDEFG"},"path/emptyDir":{},"some/path/fileExists":{"emptyFile":"","nonEmptyFile":"DevOps"}});
	subject.fileTest('some/path/dirExists/fakeDir','some/path/fileExists/nonEmptyFile');
mock.restore();
mock({"some/path/dirExists":{"fileExists1":"","fileExists2":"ABCDEFG"},"path/emptyDir":{},"some/path/fileExists":{"emptyFile":"","nonEmptyFile":"DevOps"}});
	subject.fileTest('path/emptyDir','some.path/fileExists/fakeFile');
mock.restore();
mock({"some/path/dirExists":{"fileExists1":"","fileExists2":"ABCDEFG"},"path/emptyDir":{},"some/path/fileExists":{"emptyFile":"","nonEmptyFile":"DevOps"}});
	subject.fileTest('some/path/dirExists','some.path/fileExists/fakeFile');
mock.restore();
mock({"some/path/dirExists":{"fileExists1":"","fileExists2":"ABCDEFG"},"path/emptyDir":{},"some/path/fileExists":{"emptyFile":"","nonEmptyFile":"DevOps"}});
	subject.fileTest('some/path/dirExists','some/path/fileExists/emptyFile');
mock.restore();
mock({"some/path/dirExists":{"fileExists1":"","fileExists2":"ABCDEFG"},"path/emptyDir":{},"some/path/fileExists":{"emptyFile":"","nonEmptyFile":"DevOps"}});
	subject.fileTest('some/path/dirExists/fakeDir','some.path/fileExists/fakeFile');
mock.restore();
subject.normalize('');
subject.format('','(###) ###-#### x####','');
subject.format('','(###) ###-#### x####',{"normalize": true});
subject.format("990-447-3669",'(###) ###-#### x####',{"normalize": true});
subject.format("990-447-3669",'(###) ###-#### x####',false);
subject.format("990-447-3669",'(###) ###-#### x####',true);
subject.blackListNumber('');
